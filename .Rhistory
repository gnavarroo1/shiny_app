remove_outliers <- function(x) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = TRUE)
H <- 1.5 * IQR(x, na.rm = TRUE)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
remove_outliers2<-function(x){
datacol <- as.double(as.character(x))
x<- remove_outliers(datacol)
x
}
datosInput$temp<- remove_outliers2(datosInput$temp)
datosInput$RH<- remove_outliers2(datosInput$RH)
datosInput$wind<- remove_outliers2(datosInput$wind)
datosInput$rain<- remove_outliers2(datosInput$rain)
datosInput$area<- remove_outliers2(datosInput$area)
datosLimpios = na.omit(datosInput)
datosLimpios
plot(cars)
plot(datosLimpios)
plot(datosInput)
plot(datos)
plot(datos) %>% xlim(1:10)
plot(datos,xlim=c(1:10))
plot(datos,xlim=c(1,10))
plot(datos,xlim=c(1,10),ylim=c(0,100))
plot(datos$DMC,datos$DC)
write.csv(datosLimpios,"../dataset/datosLimpios.csv",row.names = FALSE)
library("dplyr")
library("ggplot2")
library("stringr")
library("lubridate")
library("tidyr")
datos<- read.csv("../dataset/datosLimpios.csv",stringsAsFactors = FALSE,check.names = FALSE)
datos
promAreaAfectada<-function(){
x <- datos %>% summarise(promedio=mean(area))
return(x)
}
promAreaAfectada()
promTotalAreaAfectada<-function(){
x <- datos %>% summarise(areaAfectada=sum(area))
return(x)
}
promTotalAreaAfectada()
numeroIncendiosxMes<-function(mesP){
x <- datos %>% filter(str_detect(month,mesP)) %>% group_by(month) %>% summarise(cantidad=n())
return(x)
}
numeroIncendiosxMes("")
temperaturaxMes<-function(mesP){
x <- datos %>% filter(str_detect(month,mesP)) %>% group_by(month) %>% summarise(temperatura = mean(temp))
return(x)
}
temperaturaxMes("")
Top5Coordenadas<-function(){
x <- datos %>% group_by(X,Y) %>% summarise(cantidad = n()) %>% arrange(desc(cantidad)) %>% head(5)
return(x)
}
Top5Coordenadas()
Top10Incendios<-function(){
x <- datos %>% select(c(X,Y,month,RH,area))  %>% arrange(desc(area)) %>% head(10)
return(x)
}
Top10Incendios()
mesMayorIncendio<-function(){
x <- datos %>% group_by(month) %>% summarise(cantidad=n()) %>% arrange(desc(cantidad)) %>% head(1)
return(x)
}
mesMayorIncendio()
MesesTop10Incendios<-function(){
x <- Top10Incendios() %>% group_by(month) %>% summarise(cantidad=n()) %>% arrange(desc(cantidad))
return(x)
}
MesesTop10Incendios()
ZonasHumedasTop10<-function(){
x <- Top10Incendios() %>% select(c(X,Y,RH)) %>% filter(RH>mean(RH))
return(x)
}
ZonasHumedasTop10()
top2TemperaturaxMes<-function(){
x <- datos %>% group_by(month,temp) %>% summarise(cantidad=n()) %>% top_n(2, temp) %>% arrange(desc(cantidad))
return(x)
}
top2TemperaturaxMes()
plot(datos$DMC,datos$DC)
plot(datos$temp,datos$RH)
library(wakefield)
meses <- c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
dias <- c("sun","mon","tue","wed","thu","fri","sat")
mesesS<- sample(meses,50,replace = TRUE)
diasS<- sample(dias,50,replace = TRUE)
dataset <- r_data_frame(
n = 50,
height(min = 1,max = 9,digits=0,name = "X"),
height(min = 1,max = 9,digits=0,name = "Y"),
height(min = 18.7,max = 96.20,digits=1,name = "FFMC"),
height(min = 1.1,max = 291.3,digits=1,name = "DMC"),
height(min = 7.9,max = 860.3,digits=1,name = "DC"),
height(min = 0.0,max = 56.10,digits=1,name = "ISI"),
height(min = 2.2,max = 33.30,digits=1,name = "temp"),
height(min = 15.0,max = 100,digits=1,name = "RH"),
height(min = 0.40,max = 9.40,digits=1,name = "wind"),
height(min = 0.0,max = 6.40,digits=1,name = "rain"),
height(min = 0.0,max = 1090.84,digits=1,name = "area")
)
dataset$month = mesesS
dataset$day = diasS
if(file.exists("../dataset/dataGenerada.csv")){
datafile <- read.csv("../dataset/dataGenerada.csv", stringsAsFactors = FALSE,check.names = FALSE)
dataset<-rbind(dataset,datafile)
}
write.csv(dataset,"../dataset/dataGenerada.csv",row.names = FALSE)
dataset
library("dplyr")
library("ggplot2")
library("stringr")
library("lubridate")
library("tidyr")
datos<- read.csv("dataset/forestfires.csv",stringsAsFactors = FALSE,check.names = FALSE)
datos<- read.csv("../dataset/forestfires.csv",stringsAsFactors = FALSE,check.names = FALSE)
datos
plot(datos,xlim=c(0,100),ylim=c(0,100))
plot(datos$DMC,datos$DC)
x<-datos$DMC
y<-datos$DC
dt=data.frame(x,y)
vx=c(18,30,40,60,80)
regresion <- function(dt,vx){
lista <- NULL
x=dt$x
y=dt$y
sumX=sum(x)
sumY=sum(y)
prodXY=sum(x*y)
promX=mean(x)
dt$x2=x^2
dt$y2=y^2
x2=sum(x^2)
y2=sum(y^2)
promY<-mean(y)
#calculo de la covarianza
cov = (prodXY/length(x))-(promX*promY)
#calculo de las desviacion estandar x, y
dx=sqrt((x2/length(x))-promX^2)
dy=sqrt((y2/length(y))-promY^2)
#coeficiente de correlacion de Pearson
r=cov/(dx*dy)
#generando recta regresional
vy=promY+(cov/dx^2)*(vx-promX)
lista[[1]]<-dt #dt entrenamiento
lista[[2]]<-vx #datos de validacion
lista[[3]]<-vy #datos predecidos
lista[[4]]<-r  #coeficiente de correlacion de Pearson
return (lista)
}
regresion(dt,vx)[[2]]
regresion(dt,vx)[[3]]
modelo <- lm(DC ~ DMC, data = datos)
DCs <- predict(modelo,datos) #Valores Predichos
b0 <- round(modelo$coefficients[1],2)
b1 <- round(modelo$coefficients[2],2)
qplot(x = DMC, y = DC,data = datos,
main = "Duff Moisture Code vs Drought Code", xlab = "Duff Moisture Code (DMC)",
ylab = "Drought Code (DC)", geom = c("point"),
method = "lm") + geom_line(aes(y=DCs), lwd = 1.2, color = 4) +
geom_text(x = 100, y = 1000, aes(label = paste("DC^", " = ", b0, " + ", b1, "*","DMC")))
x<-datos$DMC
y<-datos$DC
dt=data.frame(x,y)
vx=c(18,30,40,60,80)
regresion <- function(dt,vx){
lista <- NULL
x=dt$x
y=dt$y
sumX=sum(x)
sumY=sum(y)
prodXY=sum(x*y)
promX=mean(x)
dt$x2=x^2
dt$y2=y^2
x2=sum(x^2)
y2=sum(y^2)
promY<-mean(y)
#calculo de la covarianza
cov = (prodXY/length(x))-(promX*promY)
#calculo de las desviacion estandar x, y
dx=sqrt((x2/length(x))-promX^2)
dy=sqrt((y2/length(y))-promY^2)
#coeficiente de correlacion de Pearson
r=cov/(dx*dy)
#generando recta regresional
vy=promY+(cov/dx^2)*(vx-promX)
lista[[1]]<-dt #dt entrenamiento
lista[[2]]<-vx #datos de validacion
lista[[3]]<-vy #datos predecidos
lista[[4]]<-r  #coeficiente de correlacion de Pearson
return (lista)
}
regresion(dt,vx)[[2]]
regresion(dt,vx)[[3]]
modelo <- lm(DC ~ DMC, data = datos)
DCs <- predict(modelo,datos) #Valores Predichos
b0 <- round(modelo$coefficients[1],2)
b1 <- round(modelo$coefficients[2],2)
qplot(x = DMC, y = DC,data = datos,
main = "Duff Moisture Code vs Drought Code", xlab = "Duff Moisture Code (DMC)",
ylab = "Drought Code (DC)", geom = c("point")) + geom_line(aes(y=DCs), lwd = 1.2, color = 4) +
geom_text(x = 100, y = 1000, aes(label = paste("DC^", " = ", b0, " + ", b1, "*","DMC")))
x<-datos$DMC
y<-datos$DC
dt=data.frame(x,y)
vx=c(18,30,40,60,80)
regresion <- function(dt,vx){
lista <- NULL
x=dt$x
y=dt$y
sumX=sum(x)
sumY=sum(y)
prodXY=sum(x*y)
promX=mean(x)
dt$x2=x^2
dt$y2=y^2
x2=sum(x^2)
y2=sum(y^2)
promY<-mean(y)
#calculo de la covarianza
cov = (prodXY/length(x))-(promX*promY)
#calculo de las desviacion estandar x, y
dx=sqrt((x2/length(x))-promX^2)
dy=sqrt((y2/length(y))-promY^2)
#coeficiente de correlacion de Pearson
r=cov/(dx*dy)
#generando recta regresional
vy=promY+(cov/dx^2)*(vx-promX)
lista[[1]]<-dt #dt entrenamiento
lista[[2]]<-vx #datos de validacion
lista[[3]]<-vy #datos predecidos
lista[[4]]<-r  #coeficiente de correlacion de Pearson
return (lista)
}
modelo <- lm(DC ~ DMC, data = datos)
DCs <- predict(modelo,datos) #Valores Predichos
b0 <- round(modelo$coefficients[1],2)
b1 <- round(modelo$coefficients[2],2)
qplot(x = DMC, y = DC,data = datos,
main = "Duff Moisture Code vs Drought Code", xlab = "Duff Moisture Code (DMC)",
ylab = "Drought Code (DC)", geom = c("point")) + geom_line(aes(y=DCs), lwd = 1.2, color = 4) +
geom_text(x = 100, y = 1000, aes(label = paste("DC^", " = ", b0, " + ", b1, "*","DMC")))
library(knitr)
shiny::runApp('~/app')
runApp('~/app')
runApp('~/app')
runApp('~/app')
rmdfiles <- c("importacion.Rmd")
sapply(rmdfiles, knit, quiet = T)
runApp('~/app')
runApp('~/app')
runApp('~/app')
runApp('~/app')
library(wakefield)
meses <- c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
dias <- c("sun","mon","tue","wed","thu","fri","sat")
mesesS<- sample(meses,50,replace = TRUE)
diasS<- sample(dias,50,replace = TRUE)
dataset <- r_data_frame(
n = 50,
height(min = 1,max = 9,digits=0,name = "X"),
height(min = 1,max = 9,digits=0,name = "Y"),
height(min = 18.7,max = 96.20,digits=1,name = "FFMC"),
height(min = 1.1,max = 291.3,digits=1,name = "DMC"),
height(min = 7.9,max = 860.3,digits=1,name = "DC"),
height(min = 0.0,max = 56.10,digits=1,name = "ISI"),
height(min = 2.2,max = 33.30,digits=1,name = "temp"),
height(min = 15.0,max = 100,digits=1,name = "RH"),
height(min = 0.40,max = 9.40,digits=1,name = "wind"),
height(min = 0.0,max = 6.40,digits=1,name = "rain"),
height(min = 0.0,max = 1090.84,digits=1,name = "area")
)
dataset$month = mesesS
dataset$day = diasS
if(file.exists("../dataset/dataGenerada.csv")){
datafile <- read.csv("../dataset/dataGenerada.csv", stringsAsFactors = FALSE,check.names = FALSE)
dataset<-rbind(dataset,datafile)
}
write.csv(dataset,"../dataset/dataGenerada.csv",row.names = FALSE)
library(markdown)
library(markdown)
runApp('~/app')
library(markdown)
runApp('~/app')
meses <- c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
dias <- c("sun","mon","tue","wed","thu","fri","sat")
mesesS<- sample(meses,50,replace = TRUE)
diasS<- sample(dias,50,replace = TRUE)
dataset <- r_data_frame(
n = 50,
height(min = 1,max = 9,digits=0,name = "X"),
height(min = 1,max = 9,digits=0,name = "Y"),
height(min = 18.7,max = 96.20,digits=1,name = "FFMC"),
height(min = 1.1,max = 291.3,digits=1,name = "DMC"),
height(min = 7.9,max = 860.3,digits=1,name = "DC"),
height(min = 0.0,max = 56.10,digits=1,name = "ISI"),
height(min = 2.2,max = 33.30,digits=1,name = "temp"),
height(min = 15.0,max = 100,digits=1,name = "RH"),
height(min = 0.40,max = 9.40,digits=1,name = "wind"),
height(min = 0.0,max = 6.40,digits=1,name = "rain"),
height(min = 0.0,max = 1090.84,digits=1,name = "area")
)
dataset$month = mesesS
dataset$day = diasS
if(file.exists("../dataset/dataGenerada.csv")){
datafile <- read.csv("../dataset/dataGenerada.csv", stringsAsFactors = FALSE,check.names = FALSE)
dataset<-rbind(dataset,datafile)
}
write.csv(dataset,"../dataset/dataGenerada.csv",row.names = FALSE)
meses <- c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
dias <- c("sun","mon","tue","wed","thu","fri","sat")
mesesS<- sample(meses,50,replace = TRUE)
diasS<- sample(dias,50,replace = TRUE)
dataset <- r_data_frame(
n = 50,
height(min = 1,max = 9,digits=0,name = "X"),
height(min = 1,max = 9,digits=0,name = "Y"),
height(min = 18.7,max = 96.20,digits=1,name = "FFMC"),
height(min = 1.1,max = 291.3,digits=1,name = "DMC"),
height(min = 7.9,max = 860.3,digits=1,name = "DC"),
height(min = 0.0,max = 56.10,digits=1,name = "ISI"),
height(min = 2.2,max = 33.30,digits=1,name = "temp"),
height(min = 15.0,max = 100,digits=1,name = "RH"),
height(min = 0.40,max = 9.40,digits=1,name = "wind"),
height(min = 0.0,max = 6.40,digits=1,name = "rain"),
height(min = 0.0,max = 1090.84,digits=1,name = "area")
)
dataset$month = mesesS
dataset$day = diasS
if(file.exists("../dataset/dataGenerada.csv")){
datafile <- read.csv("../dataset/dataGenerada.csv", stringsAsFactors = FALSE,check.names = FALSE)
dataset<-rbind(dataset,datafile)
}
write.csv(dataset,"/dataset/dataGenerada.csv",row.names = FALSE)
meses <- c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
dias <- c("sun","mon","tue","wed","thu","fri","sat")
mesesS<- sample(meses,50,replace = TRUE)
diasS<- sample(dias,50,replace = TRUE)
dataset <- r_data_frame(
n = 50,
height(min = 1,max = 9,digits=0,name = "X"),
height(min = 1,max = 9,digits=0,name = "Y"),
height(min = 18.7,max = 96.20,digits=1,name = "FFMC"),
height(min = 1.1,max = 291.3,digits=1,name = "DMC"),
height(min = 7.9,max = 860.3,digits=1,name = "DC"),
height(min = 0.0,max = 56.10,digits=1,name = "ISI"),
height(min = 2.2,max = 33.30,digits=1,name = "temp"),
height(min = 15.0,max = 100,digits=1,name = "RH"),
height(min = 0.40,max = 9.40,digits=1,name = "wind"),
height(min = 0.0,max = 6.40,digits=1,name = "rain"),
height(min = 0.0,max = 1090.84,digits=1,name = "area")
)
dataset$month = mesesS
dataset$day = diasS
if(file.exists("../dataset/dataGenerada.csv")){
datafile <- read.csv("../dataset/dataGenerada.csv", stringsAsFactors = FALSE,check.names = FALSE)
dataset<-rbind(dataset,datafile)
}
write.csv(dataset,"dataset/dataGenerada.csv",row.names = FALSE)
library(wakefield)
library(markdown)
meses <- c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
dias <- c("sun","mon","tue","wed","thu","fri","sat")
mesesS<- sample(meses,50,replace = TRUE)
diasS<- sample(dias,50,replace = TRUE)
dataset <- r_data_frame(
n = 50,
height(min = 1,max = 9,digits=0,name = "X"),
height(min = 1,max = 9,digits=0,name = "Y"),
height(min = 18.7,max = 96.20,digits=1,name = "FFMC"),
height(min = 1.1,max = 291.3,digits=1,name = "DMC"),
height(min = 7.9,max = 860.3,digits=1,name = "DC"),
height(min = 0.0,max = 56.10,digits=1,name = "ISI"),
height(min = 2.2,max = 33.30,digits=1,name = "temp"),
height(min = 15.0,max = 100,digits=1,name = "RH"),
height(min = 0.40,max = 9.40,digits=1,name = "wind"),
height(min = 0.0,max = 6.40,digits=1,name = "rain"),
height(min = 0.0,max = 1090.84,digits=1,name = "area")
)
dataset$month = mesesS
dataset$day = diasS
if(file.exists("/dataset/dataGenerada.csv")){
datafile <- read.csv("/dataset/dataGenerada.csv", stringsAsFactors = FALSE,check.names = FALSE)
dataset<-rbind(dataset,datafile)
}
write.csv(dataset,"dataset/dataGenerada.csv",row.names = FALSE)
meses <- c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
dias <- c("sun","mon","tue","wed","thu","fri","sat")
mesesS<- sample(meses,50,replace = TRUE)
diasS<- sample(dias,50,replace = TRUE)
dataset <- r_data_frame(
n = 50,
height(min = 1,max = 9,digits=0,name = "X"),
height(min = 1,max = 9,digits=0,name = "Y"),
height(min = 18.7,max = 96.20,digits=1,name = "FFMC"),
height(min = 1.1,max = 291.3,digits=1,name = "DMC"),
height(min = 7.9,max = 860.3,digits=1,name = "DC"),
height(min = 0.0,max = 56.10,digits=1,name = "ISI"),
height(min = 2.2,max = 33.30,digits=1,name = "temp"),
height(min = 15.0,max = 100,digits=1,name = "RH"),
height(min = 0.40,max = 9.40,digits=1,name = "wind"),
height(min = 0.0,max = 6.40,digits=1,name = "rain"),
height(min = 0.0,max = 1090.84,digits=1,name = "area")
)
dataset$month = mesesS
dataset$day = diasS
if(file.exists("/dataset/dataGenerada.csv")){
datafile <- read.csv("/dataset/dataGenerada.csv", stringsAsFactors = FALSE,check.names = FALSE)
dataset<-rbind(dataset,datafile)
}
write.csv(dataset,"/dataset/dataGenerada.csv",row.names = FALSE)
meses <- c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
dias <- c("sun","mon","tue","wed","thu","fri","sat")
mesesS<- sample(meses,50,replace = TRUE)
diasS<- sample(dias,50,replace = TRUE)
dataset <- r_data_frame(
n = 50,
height(min = 1,max = 9,digits=0,name = "X"),
height(min = 1,max = 9,digits=0,name = "Y"),
height(min = 18.7,max = 96.20,digits=1,name = "FFMC"),
height(min = 1.1,max = 291.3,digits=1,name = "DMC"),
height(min = 7.9,max = 860.3,digits=1,name = "DC"),
height(min = 0.0,max = 56.10,digits=1,name = "ISI"),
height(min = 2.2,max = 33.30,digits=1,name = "temp"),
height(min = 15.0,max = 100,digits=1,name = "RH"),
height(min = 0.40,max = 9.40,digits=1,name = "wind"),
height(min = 0.0,max = 6.40,digits=1,name = "rain"),
height(min = 0.0,max = 1090.84,digits=1,name = "area")
)
dataset$month = mesesS
dataset$day = diasS
if(file.exists("/dataset/dataGenerada.csv")){
datafile <- read.csv("/dataset/dataGenerada.csv", stringsAsFactors = FALSE,check.names = FALSE)
dataset<-rbind(dataset,datafile)
}
write.csv(dataset,"/dataset/dataGenerada.csv",row.names = FALSE)
getwd()
meses <- c("jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec")
dias <- c("sun","mon","tue","wed","thu","fri","sat")
mesesS<- sample(meses,50,replace = TRUE)
diasS<- sample(dias,50,replace = TRUE)
dataset <- r_data_frame(
n = 50,
height(min = 1,max = 9,digits=0,name = "X"),
height(min = 1,max = 9,digits=0,name = "Y"),
height(min = 18.7,max = 96.20,digits=1,name = "FFMC"),
height(min = 1.1,max = 291.3,digits=1,name = "DMC"),
height(min = 7.9,max = 860.3,digits=1,name = "DC"),
height(min = 0.0,max = 56.10,digits=1,name = "ISI"),
height(min = 2.2,max = 33.30,digits=1,name = "temp"),
height(min = 15.0,max = 100,digits=1,name = "RH"),
height(min = 0.40,max = 9.40,digits=1,name = "wind"),
height(min = 0.0,max = 6.40,digits=1,name = "rain"),
height(min = 0.0,max = 1090.84,digits=1,name = "area")
)
dataset$month = mesesS
dataset$day = diasS
if(file.exists("/home/rstudio/ProyectoFinal/dataset/dataGenerada.csv")){
datafile <- read.csv("/home/rstudio/ProyectoFinal/dataset/dataGenerada.csv", stringsAsFactors = FALSE,check.names = FALSE)
dataset<-rbind(dataset,datafile)
}
write.csv(dataset,"/home/rstudio/ProyectoFinal/dataset/dataGenerada.csv",row.names = FALSE)
dataset
runApp('~/app')
runApp('~/app')
runApp('~/app')
runApp('~/app')
runApp('~/app')
runApp('~/app')
runApp('~/app')
runApp('~/app')
runApp('~/app')
runApp('~/app')
download.file("https://archive.ics.uci.edu/ml/machine-learning-databases/forest-fires/forestfires.csv", destfile = "/home/rstudio/ProyectoFinal/dataset/forestfires.csv")
runApp('~/app')
runApp('~/app')
runApp('~/app')
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
getwd()
# Tranferencia de archivos
system(command = "sshpass -p 'root' scp -o StrictHostKeyChecking=no -r ~/app root@172.17.0.3:/srv/shiny-server/")
# Tranferencia de archivos
system(command = "sshpass -p 'root' scp -o StrictHostKeyChecking=no -r ~/ProyectoFinal root@172.17.0.3:/home/rstudio/")
# Tranferencia de archivos
system(command = "sudo sshpass -p 'root' scp -o StrictHostKeyChecking=no -r ~/ProyectoFinal root@172.17.0.3:/home/rstudio/")
# Tranferencia de archivos
system(command = "sshpass -p 'root' scp -o StrictHostKeyChecking=no -r ~/ProyectoFinal root@172.17.0.3:/home/rstudio/")
runApp('app')
install.packages(c("RCurl","mailR"))
getwd()
# Tranferencia de archivos
system(command = "sshpass -p 'root' scp -o StrictHostKeyChecking=no -r ~/ProyectoFinal root@172.17.0.3:/home/rstudio/")
# Tranferencia de archivos
system(command = "sshpass -p 'root' scp -o StrictHostKeyChecking=no -r ~/ProyectoFinal root@172.17.0.3:/home/rstudio/")
